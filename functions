# A simple cd-and-ls wrapper
function cl() {
    cd $1;
    ls -lF;
}

# Formats a man page as PDF, then supplies to Preview.app on stdin.
pman() {
    man -t "$@" | open -f -a Preview
}

# Get all of my IPs
function ip () {
    echo -e "WiFi:     `ipconfig getifaddr en0 2> /dev/null`"
    echo -e "Wired:    `ipconfig getifaddr en1 2> /dev/null`"
    echo -e "External: `dig +short myip.opendns.com @resolver1.opendns.com`"
}

# Simple calculator
function calc() {
    local result=""
    result="$(printf "scale=10;$*\n" | bc --mathlib | tr -d '\\\n')"
    #                       └─ default (when `--mathlib` is used) is 20
    #
    if [[ "$result" == *.* ]]; then
        # improve the output for decimal numbers
        printf "$result" |
            sed -e 's/^\./0./'        `# add "0" for cases like ".5"` \
                -e 's/^-\./-0./'      `# add "0" for cases like "-.5"`\
                -e 's/0*$//;s/\.$//'   # remove trailing zeros
    else
        printf "$result"
    fi
    printf "\n"
}

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

# Create a .tar.gz archive of current directory
function targz() {
    local tmpFile="$(basename `pwd`).tar.gz"
    tar -czvf "${tmpFile}" --exclude=".DS_Store" --exclude=".git" --exclude=".svn" --exclude "${tmpFile}" --exclude ".idea" . || return 1

    echo "${tmpFile} created successfully."
}

# Convert a jpg to png using apple's sips command
function jpg2png() {
    sips -s format png $1 --out ${1/jpg/png}
}

# Catch-all extractor method.
# Usage: ex apache-*.tar.gz
function ex() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjfv $1        ;;
            *.tar.gz)    tar xzfv $1     ;;
            *.tar.xz)    tar xJfv $1     ;;
            *.bz2)       bunzip2 $1       ;;
            *.rar)       rar x $1     ;;
            *.gz)        gunzip $1     ;;
            *.tar)       tar xfv $1        ;;
            *.tbz2)      tar xjfv $1      ;;
            *.tgz)       tar xzfv $1       ;;
            *.zip)       unzip $1     ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1    ;;
            *)           echo "'$1' cannot be extracted via ex()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Prints out all the colors available via tput
function 256colors() {
    ( x=`tput op` y=`printf %$((${COLUMNS}-6))s`;
    for i in {0..256};
    do
    o=00$i;
    echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;
    done )
}

function eject() {
    diskutil umount /Volumes/$1
}
