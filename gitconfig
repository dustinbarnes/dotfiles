[core]
  excludesfile = ~/dotfiles/gitignore
[color]
  # color opts: normal, black, red, green, yellow, blue, magenta, cyan, or white
  ui = auto
  interactive = auto
[user]
  name = Dustin Barnes
	email = dustin.barnes@gmail.com
[credential]
  helper = osxkeychain
[push]
  # 
	default = current
[alias]
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  co = checkout
  ci = commit
  st = status
  ahead = log @{u}..
  behind = log ..@{u}

  # Diff what is staged for the next commit
  diffc = diff --cached
  # Diff overview
  diffst = diff --stat

  # `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
  # `git gc`: cleanup unnecessary files and optimize the local repository
  # `git clean -df`: remove untracked files and directories from the working tree
  # `git stash clear`: remove all stashed states
  trim = !git remote prune origin && git gc
  cleanup = !git clean -df && git stash clear

  # Custom graph log (append any tree-ish)
  graph = log --pretty=nice --date-order --graph
  # Custom graph log for all branches
  grapha = log --pretty=nice --date-order --graph --all
[pretty]
  # tut: http://gitimmersion.com/lab_10.html
  # ref: http://linux.die.net/man/1/git-log
  # Result: <short-sha> <commit-message> (<pointer-names>) -- <commit-author-name>; <relative-time>
  nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"
